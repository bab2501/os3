
####################################################################
##### This file is automatically generated -- edit at your own risk
##### Built by ablaauwgeers@nevers
##### on Wed 4 Oct 12:42:43 CEST 2017 using template OS/Linux
##### in /home/ablaauwgeers/os3/cia/a5/sendmail-8.15.2/libsmdb
####################################################################




















# sendmail dir
SMSRCDIR=	${SRCDIR}/sendmail













# C compiler
CC=	cc
CCOPTS=   

# Linker for executables
CCLINK = cc
# Linker for libraries
LD=	ld
LDOPTS=	 
LDOPTS_SO= ${LDOPTS} -shared

# Shell
SHELL=	/bin/sh

# use O=-O (usual) or O=-g (debugging)
O=	-O2

# Object archiver
AR=     ar
AROPTS=	crv

# Remove command
RM=     rm
RMOPTS=	-f

# Link command
LN=     ln
LNOPTS=	-f -s

# Ranlib (or echo)
RANLIB= ranlib
RANLIBOPTS=	

# Object stripper
STRIP=	strip
STRIPOPTS=	

# environment definitions (e.g., -D_AIX3)
ENVDEF=   -DNOT_SENDMAIL 

# location of the source directory
SRCDIR=	../..

# include directories
INCDIRS= -I${SMSRCDIR}   -I${SRCDIR}/include 

# library directories
LIBDIRS=

# Additional libs needed
LIBADD= 

# libraries required on your system
LIBS= ${LIBADD}  -ldl 

# location of sendmail binary (usually /usr/sbin or /usr/lib)
BINDIR=	/usr/sbin

# location of "user" binaries (usually /usr/bin or /usr/ucb)
UBINDIR=/usr/bin

# location of "root" binaries (usually /usr/sbin or /usr/etc)
SBINDIR=/usr/sbin

# location of "root" binaries (usually /usr/sbin or /usr/etc)
MBINDIR=/usr/sbin

# location of "libexec" binaries (usually /usr/libexec or /usr/etc)
EBINDIR=/usr/sbin

# where to install include files (usually /usr/include)
INCLUDEDIR=/usr/include

# where to install library files (usually /usr/lib)
LIBDIR=/usr/lib

# additional .c files needed
SRCADD= 



# additional .o files needed
OBJADD=	
libsmdbOBJADD=  

# copy files
CP= cp

# In some places windows wants nmake where unix would just want make
NMAKE=${MAKE}

###################  end of user configuration flags  ######################

BUILDBIN=${SRCDIR}/devtools/bin
COPTS=	-I. ${INCDIRS} ${ENVDEF} ${CCOPTS}
CFLAGS=	$O ${COPTS} 


BEFORE=	 sm_os.h

LINKS=

libsmdbSRCS= smdb.c smdb1.c smdb2.c smndbm.c  ${SRCADD}
libsmdbOBJS= smdb.o smdb1.o smdb2.o smndbm.o   ${OBJADD} ${libsmdbOBJADD}
libsmdbSMDEPLIBS= 
libsmdbTARGET_LINKS= 




NROFF=	groff -Tascii
MANDOC=	-man

INSTALL=install

# User binary ownership/permissions
UBINOWN=bin
UBINGRP=bin
UBINMODE=555

# Setuid binary ownership/permissions
SBINOWN=root
SBINGRP=bin
SBINMODE=4555

# Setgid binary ownership/permissions
GBINOWN=root
GBINGRP=smmsp
GBINMODE=2555

# owner of MSP queue
MSPQOWN=smmsp

# MTA binary ownership/permissions
MBINOWN=root
MBINGRP=bin
MBINMODE=550

# Library ownership/permissions
LIBOWN=root
LIBGRP=bin
LIBMODE=0444

# Include file ownership/permissions
INCOWN=root
INCGRP=bin
INCMODE=0444





ALL=${BEFORE} ${LINKS} libsmdb.a 

all: ${ALL}

clean: libsmdb-clean 

SRCS=${libsmdbSRCS} 
OBJS=${libsmdbOBJS} 





VPATH=${srcdir}

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; \
	list='$(TESTS)'; \
	srcdir=$(srcdir); export srcdir; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes=`echo "$$banner" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	fi


check-am: all
	$(MAKE) $(check_PROGRAMS)
	$(MAKE) check-TESTS
check: check-am


SRCS_CHK=${SRCS_CHK} ${SRCS_CHK} 
OBJS_CHK=${OBJS} ${OBJS} 


install: install-libsmdb 

install-strip: install-libsmdb  



sm_os.h: ${SRCDIR}/include/sm/os/sm_os_linux.h
	${RM} ${RMOPTS} sm_os.h
	${LN} ${LNOPTS} ${SRCDIR}/include/sm/os/sm_os_linux.h sm_os.h




################  Dependency scripts
#	$Id: CC-M.m4,v 8.5 1999-05-27 22:03:28 peterh Exp $
depend: ${BEFORE} ${LINKS}
	@mv Makefile Makefile.old
	@sed -e '/^# Do not edit or remove this line or anything below it.$$/,$$d' < Makefile.old > Makefile
	@echo "# Do not edit or remove this line or anything below it." >> Makefile
	${CC} -M ${COPTS} ${SRCS} >> Makefile

#	End of $RCSfile: CC-M.m4,v $
################  End of dependency scripts

libsmdb.a: ${BEFORE} ${libsmdbOBJS}
	${AR} ${AROPTS} libsmdb.a ${libsmdbOBJS}
	${RANLIB} ${RANLIBOPTS} libsmdb.a


install-libsmdb: libsmdb.a


libsmdb-clean:
	rm -f ${OBJS} libsmdb.a ${MANPAGES}

